## Default settings for the simulation### Scenario settingsScenario.name = default_scenarioScenario.simulateConnections = trueScenario.updateInterval = 0.1# 43200s == 12h#Scenario.endTime = 10000000#Scenario.endTime = 43200#シュミレーション時間Scenario.endTime = 5000DisasterPointMassage.type = DisasterPointMassage#パケット送信間隔#pingApp.interval = 10# Set Ping app for all nodesGroup.nrofApplications = 1Group.application1 = DisasterPointMassage# Add report for Ping app#Report.nrofReports = 2#Report.report2 = PingAppReporter# "Bluetooth" interface for all nodes#btInterface.type = SimpleBroadcastInterface# Transmit speed of 2 Mbps = 250kBps#通信速度#btInterface.transmitSpeed = 250k#通信距離#btInterface.transmitRange = 20# High speed, long range, interface for group 4#highspeedInterface.type = SimpleBroadcastInterface#highspeedInterface.transmitSpeed = 10M#highspeedInterface.transmitRange = 10# Define 6 different node groups#ノードグループの数Scenario.nrofHostGroups = 2# Common settings for all groupsGroup.movementModel = ShortestPathMapBasedMovement#ルーティングプロトコルGroup.router = VectorRouterProtoType#バッファサイズGroup.bufferSize = 1000M#待ち時間Group.waitTime = 0, 120#移動速度Group.speed = 0.5, 1.5#●メッセージの余命Group.msgTtl = 100000#●ホストの数Group.nrofHosts=500DisasterPointMassage.norfhosts=500# group1 (pedestrians) specific settings# All nodes have the bluetooth interfaceGroup1.nrofInterfaces = 2Group2.nrofInterfaces = 1#●一般歩行者ノードGroup1.groupID = p#災害地点情報専用インターフェースGroup1.interface1= btInterface1btInterface1.type =SimpleBroadcastInterfacebtInterface1.transmitRange = 2btInterface1.transmitSpeed = 250kbtInterface1.transmitSpeeds = 250k　　#被災者間インターフェースGroup1.interface2 = btInterface2#読み込めていない部分btInterface2.type = InterferenceLimitedInterfacebtInterface2.transmitRange = 20btInterface2.transmitSpeed = 150kbtInterface2.transmitSpeeds = 150k#●被災地点ノードGroup2.groupID=d-Group2.movementModel=RandomDisasterPoint2Group2.nrofHosts=100Group2.speed = 40,100#災害地点情報専用インターフェースGroup2.interface1= btInterface1btInterface1.type = SimpleBroadcastInterfacebtInterface1.transmitRange = 2btInterface1.transmitSpeed = 250k## Message creation parameters# How many event generatorsEvents.nrof = 0# Class of the first event generatorEvents1.class = MessageEventGenerator# (following settings are specific for the MessageEventGenerator class)# Creation interval in seconds (one new message every 25 to 35 seconds)Events1.interval = 0,0# Message sizes (500kB - 1MB)Events1.size = 500k,1M# range of message source/destination addressesEvents1.hosts = 0,125# Message ID prefixEvents1.prefix = M#●ムーブメントモデルにおけるランダム関数のシード値MovementModel.rngSeed =2PointOfInterest.rngSeed=MovementModel.rngSeed# World's size for Movement Models without implicit size (width, height; meters)MovementModel.worldSize = 4500, 3400# How long time to move hosts in the world before real simulationMovementModel.warmup = 1000## Map based movement -movement model specific settingsMapBasedMovement.nrofMapFiles = 4MapBasedMovement.mapFile1 = data/roads.wktMapBasedMovement.mapFile2 = data/main_roads.wktMapBasedMovement.mapFile3 = data/pedestrian_paths.wktMapBasedMovement.mapFile4 = data/shops.wkt## Reports - all report names have to be valid report classes# how many reports to loadReport.nrofReports = 0# length of the warm up period (simulated seconds)Report.warmup = 0# default directory of reports (can be overridden per Report with output setting)Report.reportDir = reports/# Report classes to loadReport.report1 = ContactTimesReportReport.report2 = ConnectivityONEReport## Default settings for some routers settings#ProphetRouter.secondsInTimeUnit = 30#SprayAndWaitRouter.nrofCopies = 6#SprayAndWaitRouter.binaryMode = true## Optimization settings -- these affect the speed of the simulation## see World class for details.Optimization.cellSizeMult = 5Optimization.randomizeUpdateOrder = true## GUI settings# GUI underlay image settingsGUI.UnderlayImage.fileName = data/helsinki_underlay.png# Image offset in pixels (x, y)GUI.UnderlayImage.offset = 64, 20# Scaling factor for the imageGUI.UnderlayImage.scale = 4.75# Image rotation (radians)GUI.UnderlayImage.rotate = -0.015# how many events to show in the log panel (default = 30)GUI.EventLogPanel.nrofEvents = 100# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$